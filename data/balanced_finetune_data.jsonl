{"query": "Show prescriptions in NC from 2021", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'NC'\n    AND YEAR(SERVICE_DATE_DD) = 2021\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in CA from 2021", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'CA'\n    AND YEAR(SERVICE_DATE_DD) = 2021\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Imbruvica prescriptions with high quantities", "sql": "-- High quantity prescriptions for Imbruvica\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Imbruvica'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all prescriptions for Eliquis", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Eliquis'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Lucentis prescriptions with high quantities", "sql": "-- High quantity prescriptions for Lucentis\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all prescriptions for Crestor", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Crestor'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all prescriptions for Avastin", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Avastin'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Pradaxa prescriptions with high quantities", "sql": "-- High quantity prescriptions for Pradaxa\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Pradaxa'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in NC from 2023", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'NC'\n    AND YEAR(SERVICE_DATE_DD) = 2023\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all prescriptions for Pradaxa", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Pradaxa'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Avastin prescriptions with high quantities", "sql": "-- High quantity prescriptions for Avastin\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Avastin'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Jardiance prescriptions with high quantities", "sql": "-- High quantity prescriptions for Jardiance\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Jardiance'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all prescriptions for Keytruda", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Keytruda'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all prescriptions for Jardiance", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Jardiance'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all prescriptions for Lucentis", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Novolog prescriptions with high quantities", "sql": "-- High quantity prescriptions for Novolog\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Novolog'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in PA from 2021", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'PA'\n    AND YEAR(SERVICE_DATE_DD) = 2021\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in FL from 2021", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'FL'\n    AND YEAR(SERVICE_DATE_DD) = 2021\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in FL from 2020", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'FL'\n    AND YEAR(SERVICE_DATE_DD) = 2020\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Humalog prescriptions with high quantities", "sql": "-- High quantity prescriptions for Humalog\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Humalog'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in PA from 2020", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'PA'\n    AND YEAR(SERVICE_DATE_DD) = 2020\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in OH from 2024", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'OH'\n    AND YEAR(SERVICE_DATE_DD) = 2024\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Herceptin prescriptions with high quantities", "sql": "-- High quantity prescriptions for Herceptin\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Herceptin'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all Oncology providers in OH", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Oncology%'\n    AND states[1] = 'OH'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "List providers at Clinic facilities", "sql": "-- Providers by facility type\nSELECT first_name, last_name, specialties[1] as specialty, hospital_names[1] as hospital\nFROM as_providers_v1\nWHERE hospital_names[1] LIKE '%Clinic%'\nORDER BY hospital_names[1], last_name\nLIMIT 40;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Show providers in Albany, NY", "sql": "-- Providers by city\nSELECT first_name, last_name, specialties[1] as specialty, hospital_names[1] as hospital\nFROM as_providers_v1  \nWHERE cities[1] = 'Albany'\n    AND states[1] = 'NY'\nORDER BY specialties[1], last_name\nLIMIT 25;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "List providers at Medical Center facilities", "sql": "-- Providers by facility type\nSELECT first_name, last_name, specialties[1] as specialty, hospital_names[1] as hospital\nFROM as_providers_v1\nWHERE hospital_names[1] LIKE '%Medical Center%'\nORDER BY hospital_names[1], last_name\nLIMIT 40;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Show providers in Unknown, MI", "sql": "-- Providers by city\nSELECT first_name, last_name, specialties[1] as specialty, hospital_names[1] as hospital\nFROM as_providers_v1  \nWHERE cities[1] = 'Unknown'\n    AND states[1] = 'MI'\nORDER BY specialties[1], last_name\nLIMIT 25;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find all Vitreoretinal Surgery providers in TX", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Vitreoretinal Surgery%'\n    AND states[1] = 'TX'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find all Hematology providers in FL", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Hematology%'\n    AND states[1] = 'FL'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "List providers at Surgery Center facilities", "sql": "-- Providers by facility type\nSELECT first_name, last_name, specialties[1] as specialty, hospital_names[1] as hospital\nFROM as_providers_v1\nWHERE hospital_names[1] LIKE '%Surgery Center%'\nORDER BY hospital_names[1], last_name\nLIMIT 40;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find all Interventional Cardiology providers in MI", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Interventional Cardiology%'\n    AND states[1] = 'MI'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find all Oncology providers in TX", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Oncology%'\n    AND states[1] = 'TX'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find all Dermatology providers in CA", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Dermatology%'\n    AND states[1] = 'CA'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find all Radiation Oncology providers in GA", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Radiation Oncology%'\n    AND states[1] = 'GA'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Show providers in Buffalo, NY", "sql": "-- Providers by city\nSELECT first_name, last_name, specialties[1] as specialty, hospital_names[1] as hospital\nFROM as_providers_v1  \nWHERE cities[1] = 'Buffalo'\n    AND states[1] = 'NY'\nORDER BY specialties[1], last_name\nLIMIT 25;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find all Dermatology providers in NC", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Dermatology%'\n    AND states[1] = 'NC'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find all Cardiovascular Surgery providers in TX", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Cardiovascular Surgery%'\n    AND states[1] = 'TX'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find payments above $25000 for Eylea HD", "sql": "-- High-value payments for specific product\nSELECT type_1_npi, life_science_firm_name, amount, nature_of_payment, year\nFROM as_lsf_v1\nWHERE product_name LIKE '%Eylea HD%'\n    AND amount > 25000\nORDER BY amount DESC, year DESC\nLIMIT 20;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Food and Beverage payments in 2024", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Food and Beverage'\n    AND year = 2024\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Find payments above $5000 for Victoza", "sql": "-- High-value payments for specific product\nSELECT type_1_npi, life_science_firm_name, amount, nature_of_payment, year\nFROM as_lsf_v1\nWHERE product_name LIKE '%Victoza%'\n    AND amount > 5000\nORDER BY amount DESC, year DESC\nLIMIT 20;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Travel and Lodging payments in 2022", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Travel and Lodging'\n    AND year = 2022\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Education payments in 2023", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Education'\n    AND year = 2023\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show payments from JOHNSON & JOHNSON in 2020", "sql": "-- Simple payments by company and year\nSELECT type_1_npi, product_name, amount, nature_of_payment\nFROM as_lsf_v1\nWHERE life_science_firm_name = 'JOHNSON & JOHNSON'\n    AND year = 2020\nORDER BY amount DESC\nLIMIT 30;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show payments from MERCK & CO., INC. in 2024", "sql": "-- Simple payments by company and year\nSELECT type_1_npi, product_name, amount, nature_of_payment\nFROM as_lsf_v1\nWHERE life_science_firm_name = 'MERCK & CO., INC.'\n    AND year = 2024\nORDER BY amount DESC\nLIMIT 30;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Speaker Fee payments in 2020", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Speaker Fee'\n    AND year = 2020\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Speaker Fee payments in 2024", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Speaker Fee'\n    AND year = 2024\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Find payments above $10000 for Remicade", "sql": "-- High-value payments for specific product\nSELECT type_1_npi, life_science_firm_name, amount, nature_of_payment, year\nFROM as_lsf_v1\nWHERE product_name LIKE '%Remicade%'\n    AND amount > 10000\nORDER BY amount DESC, year DESC\nLIMIT 20;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Food and Beverage payments in 2021", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Food and Beverage'\n    AND year = 2021\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Find payments above $5000 for Humalog", "sql": "-- High-value payments for specific product\nSELECT type_1_npi, life_science_firm_name, amount, nature_of_payment, year\nFROM as_lsf_v1\nWHERE product_name LIKE '%Humalog%'\n    AND amount > 5000\nORDER BY amount DESC, year DESC\nLIMIT 20;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show payments from AMGEN INC. in 2020", "sql": "-- Simple payments by company and year\nSELECT type_1_npi, product_name, amount, nature_of_payment\nFROM as_lsf_v1\nWHERE life_science_firm_name = 'AMGEN INC.'\n    AND year = 2020\nORDER BY amount DESC\nLIMIT 30;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Travel and Lodging payments in 2021", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Travel and Lodging'\n    AND year = 2021\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Find payments above $5000 for Opdivo", "sql": "-- High-value payments for specific product\nSELECT type_1_npi, life_science_firm_name, amount, nature_of_payment, year\nFROM as_lsf_v1\nWHERE product_name LIKE '%Opdivo%'\n    AND amount > 5000\nORDER BY amount DESC, year DESC\nLIMIT 20;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show payments from GILEAD SCIENCES, INC. in 2024", "sql": "-- Simple payments by company and year\nSELECT type_1_npi, product_name, amount, nature_of_payment\nFROM as_lsf_v1\nWHERE life_science_firm_name = 'GILEAD SCIENCES, INC.'\n    AND year = 2024\nORDER BY amount DESC\nLIMIT 30;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show payments from NOVARTIS PHARMACEUTICALS CORPORATION in 2023", "sql": "-- Simple payments by company and year\nSELECT type_1_npi, product_name, amount, nature_of_payment\nFROM as_lsf_v1\nWHERE life_science_firm_name = 'NOVARTIS PHARMACEUTICALS CORPORATION'\n    AND year = 2023\nORDER BY amount DESC\nLIMIT 30;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Education payments in 2024", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Education'\n    AND year = 2024\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show payments from PFIZER INC. in 2023", "sql": "-- Simple payments by company and year\nSELECT type_1_npi, product_name, amount, nature_of_payment\nFROM as_lsf_v1\nWHERE life_science_firm_name = 'PFIZER INC.'\n    AND year = 2023\nORDER BY amount DESC\nLIMIT 30;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show retinal injection procedures in 2022", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%retinal injection%'\n    AND YEAR(date) = 2022\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in FL above $50000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'FL'\n    AND total_claim_charge > 50000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Show colonoscopy procedures in 2024", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%colonoscopy%'\n    AND YEAR(date) = 2024\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in GA above $50000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'GA'\n    AND total_claim_charge > 50000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Show coronary angioplasty procedures in 2024", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%coronary angioplasty%'\n    AND YEAR(date) = 2024\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in PA above $200000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'PA'\n    AND total_claim_charge > 200000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Show cataract surgery procedures in 2020", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%cataract surgery%'\n    AND YEAR(date) = 2020\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in TX above $200000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'TX'\n    AND total_claim_charge > 200000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in IL above $100000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'IL'\n    AND total_claim_charge > 100000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in NC above $100000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'NC'\n    AND total_claim_charge > 100000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in OH above $200000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'OH'\n    AND total_claim_charge > 200000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Show endoscopy procedures in 2020", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%endoscopy%'\n    AND YEAR(date) = 2020\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Show echocardiogram procedures in 2023", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%echocardiogram%'\n    AND YEAR(date) = 2023\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Show retinal injection procedures in 2024", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%retinal injection%'\n    AND YEAR(date) = 2024\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Show stress test procedures in 2024", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%stress test%'\n    AND YEAR(date) = 2024\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find KOL providers with scores above 35", "sql": "-- High-scoring KOL providers\nSELECT name, displayName, score, highlyRatedConditionsCount, primaryOrgName\nFROM mf_providers\nWHERE score > 35\nORDER BY score DESC, highlyRatedConditionsCount DESC\nLIMIT 20;", "domain": "simple_kol", "tables": ["mf_providers"], "complexity": "simple"}
{"query": "Find KOL providers with scores above 25", "sql": "-- High-scoring KOL providers\nSELECT name, displayName, score, highlyRatedConditionsCount, primaryOrgName\nFROM mf_providers\nWHERE score > 25\nORDER BY score DESC, highlyRatedConditionsCount DESC\nLIMIT 20;", "domain": "simple_kol", "tables": ["mf_providers"], "complexity": "simple"}
{"query": "Find KOL providers with scores above 45", "sql": "-- High-scoring KOL providers\nSELECT name, displayName, score, highlyRatedConditionsCount, primaryOrgName\nFROM mf_providers\nWHERE score > 45\nORDER BY score DESC, highlyRatedConditionsCount DESC\nLIMIT 20;", "domain": "simple_kol", "tables": ["mf_providers"], "complexity": "simple"}
{"query": "Show top prescribing providers for Keytruda in 2020", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Keytruda'\n    AND YEAR(f.SERVICE_DATE_DD) = 2020\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Oncology providers who prescribe Keytruda in FL", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Oncology%'\n    AND p.states[1] = 'FL'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Keytruda'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Oncology providers who prescribe Keytruda in OH", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Oncology%'\n    AND p.states[1] = 'OH'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Keytruda'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Herceptin prescribing patterns by provider location in NC", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Herceptin'\n    AND p.states[1] = 'NC'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Lucentis prescribing patterns by provider location in TX", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND p.states[1] = 'TX'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Dermatology providers who prescribe Humira in MI", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Dermatology%'\n    AND p.states[1] = 'MI'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Humira'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Cardiology providers who prescribe Lipitor in MI", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Cardiology%'\n    AND p.states[1] = 'MI'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Lipitor'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Vitreoretinal Surgery providers who prescribe Avastin in TX", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Vitreoretinal Surgery%'\n    AND p.states[1] = 'TX'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Avastin'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Crestor prescribing patterns by provider location in NC", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Crestor'\n    AND p.states[1] = 'NC'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Lucentis prescribing patterns by provider location in CA", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND p.states[1] = 'CA'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Lipitor in 2021", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lipitor'\n    AND YEAR(f.SERVICE_DATE_DD) = 2021\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Lucentis in 2020", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND YEAR(f.SERVICE_DATE_DD) = 2020\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Lucentis prescribing patterns by provider location in PA", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND p.states[1] = 'PA'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Opdivo in 2020", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Opdivo'\n    AND YEAR(f.SERVICE_DATE_DD) = 2020\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Rituxan in 2023", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Rituxan'\n    AND YEAR(f.SERVICE_DATE_DD) = 2023\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Crestor in 2022", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Crestor'\n    AND YEAR(f.SERVICE_DATE_DD) = 2022\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Avastin prescribing patterns by provider location in PA", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Avastin'\n    AND p.states[1] = 'PA'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Xarelto in 2021", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Xarelto'\n    AND YEAR(f.SERVICE_DATE_DD) = 2021\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Opdivo prescribing patterns by provider location in FL", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Opdivo'\n    AND p.states[1] = 'FL'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Gastroenterology providers who prescribe Enbrel in FL", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Gastroenterology%'\n    AND p.states[1] = 'FL'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Enbrel'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Novolog in 2024", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Novolog'\n    AND YEAR(f.SERVICE_DATE_DD) = 2024\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Ozempic prescribing patterns by provider location in MI", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Ozempic'\n    AND p.states[1] = 'MI'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Endocrinology providers who prescribe Humalog in IL", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Endocrinology%'\n    AND p.states[1] = 'IL'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Humalog'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Hematology providers who prescribe Imbruvica in NC", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Hematology%'\n    AND p.states[1] = 'NC'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Imbruvica'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Gastroenterology providers who prescribe Remicade in NC", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Gastroenterology%'\n    AND p.states[1] = 'NC'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Remicade'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Lucentis prescribing patterns by provider location in MI", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND p.states[1] = 'MI'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Pradaxa in 2023", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Pradaxa'\n    AND YEAR(f.SERVICE_DATE_DD) = 2023\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Humalog prescribing patterns by provider location in FL", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Humalog'\n    AND p.states[1] = 'FL'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Oncology providers who prescribe Revlimid in PA", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Oncology%'\n    AND p.states[1] = 'PA'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Revlimid'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Ophthalmology providers who prescribe Lucentis in NY", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Ophthalmology%'\n    AND p.states[1] = 'NY'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Humalog in 2021", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Humalog'\n    AND YEAR(f.SERVICE_DATE_DD) = 2021\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Humalog in 2022", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Humalog'\n    AND YEAR(f.SERVICE_DATE_DD) = 2022\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Crestor in 2021", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Crestor'\n    AND YEAR(f.SERVICE_DATE_DD) = 2021\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Jardiance prescribing patterns by provider location in GA", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Jardiance'\n    AND p.states[1] = 'GA'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Humira in 2020", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Humira'\n    AND YEAR(f.SERVICE_DATE_DD) = 2020\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Crestor prescribing patterns by provider location in TX", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Crestor'\n    AND p.states[1] = 'TX'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Victoza in 2020", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Victoza'\n    AND YEAR(f.SERVICE_DATE_DD) = 2020\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Novolog prescribing patterns by provider location in GA", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Novolog'\n    AND p.states[1] = 'GA'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Humalog prescribing patterns by provider location in TX", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Humalog'\n    AND p.states[1] = 'TX'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Find Cardiology providers who prescribe Pradaxa in TX", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Cardiology%'\n    AND p.states[1] = 'TX'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Pradaxa'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Victoza prescribing patterns by provider location in GA", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Victoza'\n    AND p.states[1] = 'GA'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Show top prescribing providers for Lantus in 2021", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lantus'\n    AND YEAR(f.SERVICE_DATE_DD) = 2021\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Xarelto prescribing patterns by provider location in OH", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Xarelto'\n    AND p.states[1] = 'OH'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Analyze Lucentis prescribing patterns by provider location in GA", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lucentis'\n    AND p.states[1] = 'GA'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1", "mf_providers"], "complexity": "complex"}
{"query": "Map referral networks for stress test procedures: analyze referring patterns, provider expertise, and payment relationships in PA", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%stress test%'\n        AND r.primary_type_2_npi_state = 'PA'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'PA'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for hernia repair: volume, outcomes, provider expertise, and financial performance in FL", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%hernia repair%'\n        AND r.primary_type_2_npi_state = 'FL'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'FL'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'FL'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for laser photocoagulation: volume, outcomes, provider expertise, and financial performance in FL", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%laser photocoagulation%'\n        AND r.primary_type_2_npi_state = 'FL'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'FL'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'FL'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Map referral networks for laser photocoagulation procedures: analyze referring patterns, provider expertise, and payment relationships in IL", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%laser photocoagulation%'\n        AND r.primary_type_2_npi_state = 'IL'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'IL'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for cardiac catheterization: volume, outcomes, provider expertise, and financial performance in MI", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%cardiac catheterization%'\n        AND r.primary_type_2_npi_state = 'MI'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'MI'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'MI'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for arthroscopic surgery: volume, outcomes, provider expertise, and financial performance in FL", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%arthroscopic surgery%'\n        AND r.primary_type_2_npi_state = 'FL'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'FL'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'FL'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Map referral networks for appendectomy procedures: analyze referring patterns, provider expertise, and payment relationships in PA", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%appendectomy%'\n        AND r.primary_type_2_npi_state = 'PA'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'PA'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for laparoscopic surgery: volume, outcomes, provider expertise, and financial performance in FL", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%laparoscopic surgery%'\n        AND r.primary_type_2_npi_state = 'FL'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'FL'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'FL'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Map referral networks for colonoscopy procedures: analyze referring patterns, provider expertise, and payment relationships in PA", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%colonoscopy%'\n        AND r.primary_type_2_npi_state = 'PA'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'PA'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for hernia repair: volume, outcomes, provider expertise, and financial performance in NC", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%hernia repair%'\n        AND r.primary_type_2_npi_state = 'NC'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'NC'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'NC'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Map referral networks for cardiac catheterization procedures: analyze referring patterns, provider expertise, and payment relationships in GA", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%cardiac catheterization%'\n        AND r.primary_type_2_npi_state = 'GA'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'GA'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Map referral networks for retinal injection procedures: analyze referring patterns, provider expertise, and payment relationships in CA", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%retinal injection%'\n        AND r.primary_type_2_npi_state = 'CA'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'CA'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for coronary angioplasty: volume, outcomes, provider expertise, and financial performance in MI", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%coronary angioplasty%'\n        AND r.primary_type_2_npi_state = 'MI'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'MI'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'MI'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for retinal injection: volume, outcomes, provider expertise, and financial performance in GA", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%retinal injection%'\n        AND r.primary_type_2_npi_state = 'GA'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'GA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'GA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for knee arthroplasty: volume, outcomes, provider expertise, and financial performance in PA", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%knee arthroplasty%'\n        AND r.primary_type_2_npi_state = 'PA'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'PA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'PA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for retinal injection: volume, outcomes, provider expertise, and financial performance in NY", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%retinal injection%'\n        AND r.primary_type_2_npi_state = 'NY'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'NY'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'NY'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Map referral networks for colonoscopy procedures: analyze referring patterns, provider expertise, and payment relationships in MI", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%colonoscopy%'\n        AND r.primary_type_2_npi_state = 'MI'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'MI'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for echocardiogram: volume, outcomes, provider expertise, and financial performance in GA", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%echocardiogram%'\n        AND r.primary_type_2_npi_state = 'GA'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'GA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'GA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Map referral networks for hernia repair procedures: analyze referring patterns, provider expertise, and payment relationships in CA", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%hernia repair%'\n        AND r.primary_type_2_npi_state = 'CA'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'CA'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Map referral networks for colonoscopy procedures: analyze referring patterns, provider expertise, and payment relationships in CA", "sql": "-- Complex referral network with expertise and payment analysis\nWITH referral_summary AS (\n    SELECT r.referring_type_1_npi, r.primary_type_1_npi,\n           r.referring_specialty, r.primary_specialty,\n           COUNT(*) as referral_count,\n           AVG(r.total_claim_charge) as avg_claim_amount,\n           SUM(r.patient_count) as total_patients\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%colonoscopy%'\n        AND r.primary_type_2_npi_state = 'CA'\n    GROUP BY r.referring_type_1_npi, r.primary_type_1_npi,\n             r.referring_specialty, r.primary_specialty\n),\nprovider_expertise AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           p.first_name, p.last_name, p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'CA'\n)\nSELECT pe1.first_name as referring_provider,\n       pe1.last_name as referring_last_name,\n       pe2.first_name as receiving_provider, \n       pe2.last_name as receiving_last_name,\n       rs.referring_specialty,\n       rs.primary_specialty,\n       rs.referral_count,\n       rs.avg_claim_amount,\n       rs.total_patients,\n       pe1.kol_score as referring_kol_score,\n       pe2.kol_score as receiving_kol_score,\n       pe1.hospital as referring_hospital,\n       pe2.hospital as receiving_hospital\nFROM referral_summary rs\n    LEFT JOIN provider_expertise pe1 ON rs.referring_type_1_npi = pe1.npi\n    LEFT JOIN provider_expertise pe2 ON rs.primary_type_1_npi = pe2.npi\nWHERE rs.referral_count >= 3\nORDER BY rs.referral_count DESC, rs.avg_claim_amount DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for cardiac catheterization: volume, outcomes, provider expertise, and financial performance in CA", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%cardiac catheterization%'\n        AND r.primary_type_2_npi_state = 'CA'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'CA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'CA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for gallbladder removal: volume, outcomes, provider expertise, and financial performance in TX", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%gallbladder removal%'\n        AND r.primary_type_2_npi_state = 'TX'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'TX'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'TX'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for ERCP: volume, outcomes, provider expertise, and financial performance in TX", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%ERCP%'\n        AND r.primary_type_2_npi_state = 'TX'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'TX'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'TX'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center analysis for stress test: volume, outcomes, provider expertise, and financial performance in PA", "sql": "-- Comprehensive procedure center performance analysis\nWITH center_metrics AS (\n    SELECT r.primary_hospital_name,\n           COUNT(DISTINCT r.primary_type_1_npi) as provider_count,\n           COUNT(*) as procedure_volume,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%stress test%'\n        AND r.primary_type_2_npi_state = 'PA'\n        AND r.primary_hospital_name IS NOT NULL\n    GROUP BY r.primary_hospital_name\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.states[1] = 'PA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n),\ncenter_payments AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.states[1] = 'PA'\n        AND p.hospital_names[1] IS NOT NULL\n    GROUP BY p.hospital_names[1]\n)\nSELECT cm.primary_hospital_name,\n       cm.provider_count,\n       cm.procedure_volume,\n       cm.total_patients,\n       ROUND(cm.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cm.total_revenue, 0) as total_revenue,\n       cm.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(cp.total_industry_payments, 0) as industry_payments,\n       ROUND(cm.procedure_volume * 1.0 / cm.provider_count, 1) as procedures_per_provider\nFROM center_metrics cm\n    LEFT JOIN center_expertise ce ON cm.primary_hospital_name = ce.hospital_name\n    LEFT JOIN center_payments cp ON cm.primary_hospital_name = cp.hospital_name\nWHERE cm.procedure_volume >= 5\nORDER BY cm.procedure_volume DESC, ce.avg_kol_score DESC\nLIMIT 20;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Opdivo: correlate expertise scores, prescription volumes, research activity, and industry relationships for Hematology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Opdivo'\n        AND p.specialties[1] LIKE '%Hematology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Opdivo%'\n        AND p.specialties[1] LIKE '%Hematology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Humalog: correlate expertise scores, prescription volumes, research activity, and industry relationships for Internal Medicine providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Humalog'\n        AND p.specialties[1] LIKE '%Internal Medicine%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Humalog%'\n        AND p.specialties[1] LIKE '%Internal Medicine%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Remicade: correlate expertise scores, prescription volumes, research activity, and industry relationships for Rheumatology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Remicade'\n        AND p.specialties[1] LIKE '%Rheumatology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Remicade%'\n        AND p.specialties[1] LIKE '%Rheumatology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Enbrel: correlate expertise scores, prescription volumes, research activity, and industry relationships for Gastroenterology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Enbrel'\n        AND p.specialties[1] LIKE '%Gastroenterology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Enbrel%'\n        AND p.specialties[1] LIKE '%Gastroenterology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Avastin: correlate expertise scores, prescription volumes, research activity, and industry relationships for Radiation Oncology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Avastin'\n        AND p.specialties[1] LIKE '%Radiation Oncology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Avastin%'\n        AND p.specialties[1] LIKE '%Radiation Oncology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Enbrel: correlate expertise scores, prescription volumes, research activity, and industry relationships for Dermatology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Enbrel'\n        AND p.specialties[1] LIKE '%Dermatology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Enbrel%'\n        AND p.specialties[1] LIKE '%Dermatology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Avastin: correlate expertise scores, prescription volumes, research activity, and industry relationships for Vitreoretinal Surgery providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Avastin'\n        AND p.specialties[1] LIKE '%Vitreoretinal Surgery%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Avastin%'\n        AND p.specialties[1] LIKE '%Vitreoretinal Surgery%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Remicade: correlate expertise scores, prescription volumes, research activity, and industry relationships for Dermatology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Remicade'\n        AND p.specialties[1] LIKE '%Dermatology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Remicade%'\n        AND p.specialties[1] LIKE '%Dermatology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Ozempic: correlate expertise scores, prescription volumes, research activity, and industry relationships for Endocrinology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Ozempic'\n        AND p.specialties[1] LIKE '%Endocrinology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Ozempic%'\n        AND p.specialties[1] LIKE '%Endocrinology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Jardiance: correlate expertise scores, prescription volumes, research activity, and industry relationships for Family Medicine providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Jardiance'\n        AND p.specialties[1] LIKE '%Family Medicine%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Jardiance%'\n        AND p.specialties[1] LIKE '%Family Medicine%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Enbrel: correlate expertise scores, prescription volumes, research activity, and industry relationships for Rheumatology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Enbrel'\n        AND p.specialties[1] LIKE '%Rheumatology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Enbrel%'\n        AND p.specialties[1] LIKE '%Rheumatology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Opdivo: correlate expertise scores, prescription volumes, research activity, and industry relationships for Oncology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Opdivo'\n        AND p.specialties[1] LIKE '%Oncology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Opdivo%'\n        AND p.specialties[1] LIKE '%Oncology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Humalog: correlate expertise scores, prescription volumes, research activity, and industry relationships for Endocrinology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Humalog'\n        AND p.specialties[1] LIKE '%Endocrinology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Humalog%'\n        AND p.specialties[1] LIKE '%Endocrinology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Eylea HD: correlate expertise scores, prescription volumes, research activity, and industry relationships for Ophthalmology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Eylea HD'\n        AND p.specialties[1] LIKE '%Ophthalmology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Eylea HD%'\n        AND p.specialties[1] LIKE '%Ophthalmology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Eylea HD: correlate expertise scores, prescription volumes, research activity, and industry relationships for Vitreoretinal Surgery providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Eylea HD'\n        AND p.specialties[1] LIKE '%Vitreoretinal Surgery%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Eylea HD%'\n        AND p.specialties[1] LIKE '%Vitreoretinal Surgery%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Avastin: correlate expertise scores, prescription volumes, research activity, and industry relationships for Oncology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Avastin'\n        AND p.specialties[1] LIKE '%Oncology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Avastin%'\n        AND p.specialties[1] LIKE '%Oncology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive KOL influence analysis for Victoza: correlate expertise scores, prescription volumes, research activity, and industry relationships for Endocrinology providers", "sql": "-- Advanced KOL influence network analysis\nWITH kol_prescribing AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as prescription_count,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n        INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n            ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Victoza'\n        AND p.specialties[1] LIKE '%Endocrinology%'\n        AND mp.score IS NOT NULL\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY mp.npi, mp.name, mp.displayName, mp.score, \n             mp.highlyRatedConditionsCount, mp.primaryOrgName\n),\nkol_research AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(*) as research_conditions,\n           AVG(ms.score) as avg_condition_score,\n           MAX(ms.score) as max_condition_score,\n           SUM(mc.tcSize) as total_trial_involvement\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nkol_payments AS (\n    SELECT CAST(p.type_1_npi AS Int32) as npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE l.product_name LIKE '%Victoza%'\n        AND p.specialties[1] LIKE '%Endocrinology%'\n    GROUP BY p.type_1_npi\n)\nSELECT kp.name, kp.displayName, kp.primaryOrgName,\n       kp.kol_score, kp.highlyRatedConditionsCount,\n       kp.prescription_count, kp.unique_patients,\n       COALESCE(kr.research_conditions, 0) as research_areas,\n       ROUND(kr.avg_condition_score, 2) as avg_research_score,\n       COALESCE(kr.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(kpay.total_payments, 0) as industry_payments,\n       COALESCE(kpay.payment_companies, 0) as payment_sources,\n       ROUND(kp.prescription_count * kp.kol_score / 100, 2) as influence_index\nFROM kol_prescribing kp\n    LEFT JOIN kol_research kr ON kp.npi = kr.npi\n    LEFT JOIN kol_payments kpay ON kp.npi = kpay.npi\nWHERE kp.kol_score > 25 AND kp.prescription_count > 5\nORDER BY influence_index DESC, kp.kol_score DESC\nLIMIT 20;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Find all prescriptions for Trulicity", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Trulicity'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in TX from 2022", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'TX'\n    AND YEAR(SERVICE_DATE_DD) = 2022\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Revlimid prescriptions with high quantities", "sql": "-- High quantity prescriptions for Revlimid\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Revlimid'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all Neurology providers in NY", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Neurology%'\n    AND states[1] = 'NY'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Show providers in Miami, FL", "sql": "-- Providers by city\nSELECT first_name, last_name, specialties[1] as specialty, hospital_names[1] as hospital\nFROM as_providers_v1  \nWHERE cities[1] = 'Miami'\n    AND states[1] = 'FL'\nORDER BY specialties[1], last_name\nLIMIT 25;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find payments above $15000 for Keytruda", "sql": "-- High-value payments for specific product\nSELECT type_1_npi, life_science_firm_name, amount, nature_of_payment, year\nFROM as_lsf_v1\nWHERE product_name LIKE '%Keytruda%'\n    AND amount > 15000\nORDER BY amount DESC, year DESC\nLIMIT 20;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Consulting payments in 2023", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Consulting'\n    AND year = 2023\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show MRI procedures in 2023", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%MRI%'\n    AND YEAR(date) = 2023\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in CA above $75000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'CA'\n    AND total_claim_charge > 75000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find KOL providers with scores above 50", "sql": "-- High-scoring KOL providers\nSELECT name, displayName, score, highlyRatedConditionsCount, primaryOrgName\nFROM mf_providers\nWHERE score > 50\nORDER BY score DESC, highlyRatedConditionsCount DESC\nLIMIT 20;", "domain": "simple_kol", "tables": ["mf_providers"], "complexity": "simple"}
{"query": "Find Endocrinology providers who prescribe Trulicity in CA", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Endocrinology%'\n    AND p.states[1] = 'CA'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Trulicity'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Show Cardiology providers receiving research payments above $8000", "sql": "-- Payment analysis by specialty and type\nSELECT p.first_name, p.last_name, p.cities[1] as city, SUM(l.amount) as total_payments\nFROM as_providers_v1 p\n    INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\nWHERE p.specialties[1] LIKE '%Cardiology%'\n    AND l.nature_of_payment = 'Research'\n    AND l.amount > 8000\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY total_payments DESC\nLIMIT 15;", "domain": "medium_payment", "tables": ["as_providers_v1", "as_lsf_v1"], "complexity": "medium"}
{"query": "Analyze Revlimid prescribing patterns by provider location in NY", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Revlimid'\n    AND p.states[1] = 'NY'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Find Orthopedic Surgery providers performing knee procedures in TX", "sql": "-- Provider-procedure analysis by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as procedure_count\nFROM as_providers_v1 p\n    INNER JOIN as_providers_referrals_v2 r \n        ON CAST(p.type_1_npi AS Int32) = r.primary_type_1_npi\nWHERE p.specialties[1] LIKE '%Orthopedic Surgery%'\n    AND p.states[1] = 'TX'\n    AND r.procedure_code_description LIKE '%knee%'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY procedure_count DESC\nLIMIT 20;", "domain": "medium_procedure", "tables": ["as_providers_v1", "as_providers_referrals_v2"], "complexity": "medium"}
{"query": "Show KOL providers with high prescription volume for Humira", "sql": "-- KOL analysis with prescription correlation\nSELECT mp.name, mp.displayName, mp.score, COUNT(*) as prescription_count\nFROM mf_providers mp\n    INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Humira'\n    AND mp.score > 30\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY mp.name, mp.displayName, mp.score\nORDER BY mp.score DESC, prescription_count DESC\nLIMIT 20;", "domain": "medium_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Analyze payment patterns for Oncology providers by pharmaceutical company", "sql": "-- Payment distribution analysis by specialty\nSELECT l.life_science_firm_name, COUNT(DISTINCT p.type_1_npi) as provider_count,\n       SUM(l.amount) as total_payments, AVG(l.amount) as avg_payment\nFROM as_providers_v1 p\n    INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\nWHERE p.specialties[1] LIKE '%Oncology%'\n    AND l.year >= 2022\nGROUP BY l.life_science_firm_name\nHAVING provider_count >= 5\nORDER BY total_payments DESC\nLIMIT 15;", "domain": "medium_payment", "tables": ["as_providers_v1", "as_lsf_v1"], "complexity": "medium"}
{"query": "Show top prescribing providers for Insulin in 2023", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Insulin'\n    AND YEAR(f.SERVICE_DATE_DD) = 2023\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Find Gastroenterology providers who prescribe Remicade in TX", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Gastroenterology%'\n    AND p.states[1] = 'TX'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Remicade'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Analyze Lantus prescribing patterns by provider location in IL", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Lantus'\n    AND p.states[1] = 'IL'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Find Rheumatology providers who prescribe Enbrel in NY", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Rheumatology%'\n    AND p.states[1] = 'NY'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Enbrel'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Show Dermatology providers receiving consulting payments above $5000", "sql": "-- Payment analysis by specialty and type\nSELECT p.first_name, p.last_name, p.cities[1] as city, SUM(l.amount) as total_payments\nFROM as_providers_v1 p\n    INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\nWHERE p.specialties[1] LIKE '%Dermatology%'\n    AND l.nature_of_payment = 'Consulting'\n    AND l.amount > 5000\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY total_payments DESC\nLIMIT 15;", "domain": "medium_payment", "tables": ["as_providers_v1", "as_lsf_v1"], "complexity": "medium"}
{"query": "Find Neurosurgery providers performing brain procedures in CA", "sql": "-- Provider-procedure analysis by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as procedure_count\nFROM as_providers_v1 p\n    INNER JOIN as_providers_referrals_v2 r \n        ON CAST(p.type_1_npi AS Int32) = r.primary_type_1_npi\nWHERE p.specialties[1] LIKE '%Neurosurgery%'\n    AND p.states[1] = 'CA'\n    AND r.procedure_code_description LIKE '%brain%'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY procedure_count DESC\nLIMIT 20;", "domain": "medium_procedure", "tables": ["as_providers_v1", "as_providers_referrals_v2"], "complexity": "medium"}
{"query": "Analyze Metformin prescribing patterns by provider location in OH", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Metformin'\n    AND p.states[1] = 'OH'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Show KOL providers with high prescription volume for Keytruda", "sql": "-- KOL analysis with prescription correlation\nSELECT mp.name, mp.displayName, mp.score, COUNT(*) as prescription_count\nFROM mf_providers mp\n    INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Keytruda'\n    AND mp.score > 35\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY mp.name, mp.displayName, mp.score\nORDER BY mp.score DESC, prescription_count DESC\nLIMIT 20;", "domain": "medium_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Find Urology providers performing prostate procedures in FL", "sql": "-- Provider-procedure analysis by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as procedure_count\nFROM as_providers_v1 p\n    INNER JOIN as_providers_referrals_v2 r \n        ON CAST(p.type_1_npi AS Int32) = r.primary_type_1_npi\nWHERE p.specialties[1] LIKE '%Urology%'\n    AND p.states[1] = 'FL'\n    AND r.procedure_code_description LIKE '%prostate%'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY procedure_count DESC\nLIMIT 20;", "domain": "medium_procedure", "tables": ["as_providers_v1", "as_providers_referrals_v2"], "complexity": "medium"}
{"query": "Analyze payment patterns for Endocrinology providers by pharmaceutical company", "sql": "-- Payment distribution analysis by specialty\nSELECT l.life_science_firm_name, COUNT(DISTINCT p.type_1_npi) as provider_count,\n       SUM(l.amount) as total_payments, AVG(l.amount) as avg_payment\nFROM as_providers_v1 p\n    INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\nWHERE p.specialties[1] LIKE '%Endocrinology%'\n    AND l.year >= 2022\nGROUP BY l.life_science_firm_name\nHAVING provider_count >= 3\nORDER BY total_payments DESC\nLIMIT 15;", "domain": "medium_payment", "tables": ["as_providers_v1", "as_lsf_v1"], "complexity": "medium"}
{"query": "Show top prescribing providers for Xarelto in 2022", "sql": "-- Top prescribers by drug and year\nSELECT p.first_name, p.last_name, p.specialties[1] as specialty, \n       COUNT(*) as prescriptions, SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Xarelto'\n    AND YEAR(f.SERVICE_DATE_DD) = 2022\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.specialties[1]\nORDER BY prescriptions DESC, total_quantity DESC\nLIMIT 15;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Find Interventional Cardiology providers who prescribe Plavix in NY", "sql": "-- Providers prescribing specific drug by specialty and state\nSELECT p.first_name, p.last_name, p.cities[1] as city, COUNT(*) as prescription_count\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE p.specialties[1] LIKE '%Interventional Cardiology%'\n    AND p.states[1] = 'NY'\n    AND f.NDC_PREFERRED_BRAND_NM = 'Plavix'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Analyze Eliquis prescribing patterns by provider location in GA", "sql": "-- Geographic prescribing analysis\nSELECT p.cities[1] as city, p.counties[1] as county,\n       COUNT(DISTINCT p.type_1_npi) as provider_count,\n       COUNT(*) as total_prescriptions,\n       AVG(f.DAYS_SUPPLY_VAL) as avg_days_supply\nFROM as_providers_v1 p\n    INNER JOIN fct_pharmacy_clear_claim_allstatus_cluster_brand f \n        ON f.PRESCRIBER_NPI_NBR = CAST(p.type_1_npi AS String)\nWHERE f.NDC_PREFERRED_BRAND_NM = 'Eliquis'\n    AND p.states[1] = 'GA'\n    AND f.TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY p.cities[1], p.counties[1]\nHAVING provider_count >= 2\nORDER BY total_prescriptions DESC\nLIMIT 25;", "domain": "medium_prescription", "tables": ["as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "medium"}
{"query": "Show Ophthalmology providers receiving speaker fee payments above $3000", "sql": "-- Payment analysis by specialty and type\nSELECT p.first_name, p.last_name, p.cities[1] as city, SUM(l.amount) as total_payments\nFROM as_providers_v1 p\n    INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\nWHERE p.specialties[1] LIKE '%Ophthalmology%'\n    AND l.nature_of_payment = 'Speaker Fee'\n    AND l.amount > 3000\nGROUP BY p.first_name, p.last_name, p.cities[1]\nORDER BY total_payments DESC\nLIMIT 15;", "domain": "medium_payment", "tables": ["as_providers_v1", "as_lsf_v1"], "complexity": "medium"}
{"query": "Comprehensive analysis: Find Oncology providers in California who prescribe both Keytruda and Opdivo with KOL scores above 40 and analyze their payment relationships", "sql": "-- Complex multi-drug prescribing with KOL correlation\nWITH oncology_providers AS (\n    SELECT p.type_1_npi, p.first_name, p.last_name, p.cities[1] as city,\n           mp.score as kol_score, mp.highlyRatedConditionsCount\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.specialties[1] LIKE '%Oncology%'\n        AND p.states[1] = 'CA'\n        AND (mp.score > 40 OR mp.score IS NULL)\n),\nkeytruda_prescribers AS (\n    SELECT CAST(f.PRESCRIBER_NPI_NBR AS UInt64) as npi,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as keytruda_prescriptions\n    FROM fct_pharmacy_clear_claim_allstatus_cluster_brand f\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Keytruda'\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY f.PRESCRIBER_NPI_NBR\n),\nopdivo_prescribers AS (\n    SELECT CAST(f.PRESCRIBER_NPI_NBR AS UInt64) as npi,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as opdivo_prescriptions\n    FROM fct_pharmacy_clear_claim_allstatus_cluster_brand f\n    WHERE f.NDC_PREFERRED_BRAND_NM = 'Opdivo'\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n    GROUP BY f.PRESCRIBER_NPI_NBR\n),\npayment_analysis AS (\n    SELECT l.type_1_npi,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies\n    FROM as_lsf_v1 l\n    WHERE l.product_name IN ('Keytruda', 'Opdivo')\n    GROUP BY l.type_1_npi\n)\nSELECT op.first_name, op.last_name, op.city, op.kol_score, op.highlyRatedConditionsCount,\n       COALESCE(kp.keytruda_prescriptions, 0) as keytruda_prescriptions,\n       COALESCE(odp.opdivo_prescriptions, 0) as opdivo_prescriptions,\n       COALESCE(pa.total_payments, 0) as total_payments,\n       COALESCE(pa.payment_companies, 0) as payment_companies,\n       ROUND((kp.keytruda_prescriptions + odp.opdivo_prescriptions) * op.kol_score / 100, 2) as influence_index\nFROM oncology_providers op\n    LEFT JOIN keytruda_prescribers kp ON op.type_1_npi = kp.npi\n    LEFT JOIN opdivo_prescribers odp ON op.type_1_npi = odp.npi\n    LEFT JOIN payment_analysis pa ON op.type_1_npi = pa.type_1_npi\nWHERE (kp.keytruda_prescriptions > 0 AND odp.opdivo_prescriptions > 0)\n    OR (op.kol_score > 40 AND (kp.keytruda_prescriptions > 5 OR odp.opdivo_prescriptions > 5))\nORDER BY influence_index DESC, op.kol_score DESC\nLIMIT 20;", "domain": "complex_prescription", "tables": ["as_providers_v1", "mf_providers", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_lsf_v1"], "complexity": "complex"}
{"query": "Advanced market analysis: Compare diabetes medication market share with provider KOL influence and payment strategies across therapeutic areas", "sql": "-- Complex competitive market analysis with KOL influence\nWITH diabetes_market AS (\n    SELECT f.NDC_PREFERRED_BRAND_NM as drug_name,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as total_prescriptions,\n           COUNT(DISTINCT f.PRESCRIBER_NPI_NBR) as prescriber_count,\n           SUM(f.DISPENSED_QUANTITY_VAL) as total_quantity,\n           AVG(f.DISPENSED_QUANTITY_VAL) as avg_quantity_per_rx\n    FROM fct_pharmacy_clear_claim_allstatus_cluster_brand f\n    WHERE f.NDC_PREFERRED_BRAND_NM IN ('Ozempic', 'Jardiance', 'Metformin', 'Insulin', 'Trulicity', 'Victoza')\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n        AND f.SERVICE_DATE_DD >= '2023-01-01'\n    GROUP BY f.NDC_PREFERRED_BRAND_NM\n),\nkol_influence AS (\n    SELECT f.NDC_PREFERRED_BRAND_NM as drug_name,\n           COUNT(DISTINCT mp.npi) as kol_prescribers,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas\n    FROM fct_pharmacy_clear_claim_allstatus_cluster_brand f\n        INNER JOIN mf_providers mp ON CAST(f.PRESCRIBER_NPI_NBR AS Int32) = mp.npi\n    WHERE f.NDC_PREFERRED_BRAND_NM IN ('Ozempic', 'Jardiance', 'Metformin', 'Insulin', 'Trulicity', 'Victoza')\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n        AND mp.score > 25\n    GROUP BY f.NDC_PREFERRED_BRAND_NM\n),\npayment_strategies AS (\n    SELECT l.product_name as drug_name,\n           COUNT(DISTINCT l.type_1_npi) as providers_receiving_payments,\n           SUM(l.amount) as total_payments,\n           AVG(l.amount) as avg_payment,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types\n    FROM as_lsf_v1 l\n    WHERE l.product_name IN ('Ozempic', 'Jardiance', 'Metformin', 'Insulin', 'Trulicity', 'Victoza')\n        AND l.service_date >= '2023-01-01'\n    GROUP BY l.product_name\n)\nSELECT dm.drug_name,\n       dm.total_prescriptions,\n       dm.prescriber_count,\n       ROUND(dm.total_prescriptions * 100.0 / SUM(dm.total_prescriptions) OVER(), 2) as market_share_percent,\n       COALESCE(ki.kol_prescribers, 0) as kol_prescribers,\n       ROUND(ki.avg_kol_score, 2) as avg_kol_score,\n       COALESCE(ps.providers_receiving_payments, 0) as providers_receiving_payments,\n       COALESCE(ps.total_payments, 0) as total_payments,\n       ROUND(ps.avg_payment, 2) as avg_payment,\n       ROUND(ps.total_payments / dm.total_prescriptions, 2) as payment_per_prescription,\n       ROUND((ki.avg_kol_score * dm.total_prescriptions) / 1000, 2) as influence_weighted_volume\nFROM diabetes_market dm\n    LEFT JOIN kol_influence ki ON dm.drug_name = ki.drug_name\n    LEFT JOIN payment_strategies ps ON dm.drug_name = ps.drug_name\nORDER BY dm.total_prescriptions DESC;", "domain": "complex_market", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Comprehensive procedure center excellence analysis: Map cardiac surgery networks with provider expertise, patient outcomes, and industry relationships", "sql": "-- Complex cardiac surgery network analysis with comprehensive metrics\nWITH cardiac_centers AS (\n    SELECT r.primary_hospital_name,\n           r.primary_type_2_npi_state as state,\n           COUNT(DISTINCT r.primary_type_1_npi) as surgeon_count,\n           COUNT(DISTINCT r.referring_type_1_npi) as referring_provider_count,\n           COUNT(*) as total_procedures,\n           SUM(r.patient_count) as total_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           SUM(r.total_claim_charge) as total_revenue,\n           COUNT(DISTINCT r.diagnosis_code) as condition_diversity\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%cardiac%'\n        AND r.primary_hospital_name IS NOT NULL\n        AND r.total_claim_charge > 10000\n    GROUP BY r.primary_hospital_name, r.primary_type_2_npi_state\n),\ncenter_expertise AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           p.states[1] as state,\n           COUNT(DISTINCT mp.npi) as kol_count,\n           AVG(mp.score) as avg_kol_score,\n           SUM(mp.highlyRatedConditionsCount) as total_expertise_areas,\n           COUNT(DISTINCT CASE WHEN p.specialties[1] LIKE '%Cardiology%' THEN p.type_1_npi END) as cardiology_providers,\n           COUNT(DISTINCT CASE WHEN p.specialties[1] LIKE '%Cardiac Surgery%' THEN p.type_1_npi END) as cardiac_surgeons\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.hospital_names[1] IS NOT NULL\n        AND (p.specialties[1] LIKE '%Cardiology%' OR p.specialties[1] LIKE '%Cardiac%')\n    GROUP BY p.hospital_names[1], p.states[1]\n),\nindustry_relationships AS (\n    SELECT p.hospital_names[1] as hospital_name,\n           p.states[1] as state,\n           COUNT(DISTINCT l.life_science_firm_name) as payment_companies,\n           SUM(l.amount) as total_industry_payments,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types,\n           COUNT(DISTINCT CASE WHEN l.nature_of_payment = 'Research' THEN l.type_1_npi END) as research_collaborators\n    FROM as_providers_v1 p\n        INNER JOIN as_lsf_v1 l ON l.type_1_npi = p.type_1_npi\n    WHERE p.hospital_names[1] IS NOT NULL\n        AND (p.specialties[1] LIKE '%Cardiology%' OR p.specialties[1] LIKE '%Cardiac%')\n        AND l.year >= 2022\n    GROUP BY p.hospital_names[1], p.states[1]\n)\nSELECT cc.primary_hospital_name,\n       cc.state,\n       cc.surgeon_count,\n       cc.referring_provider_count,\n       cc.total_procedures,\n       cc.total_patients,\n       ROUND(cc.avg_procedure_cost, 2) as avg_cost,\n       ROUND(cc.total_revenue / 1000000, 2) as revenue_millions,\n       cc.condition_diversity,\n       COALESCE(ce.kol_count, 0) as kol_providers,\n       ROUND(ce.avg_kol_score, 2) as avg_expertise_score,\n       COALESCE(ce.cardiology_providers, 0) as cardiology_providers,\n       COALESCE(ce.cardiac_surgeons, 0) as cardiac_surgeons,\n       COALESCE(ir.payment_companies, 0) as industry_partners,\n       COALESCE(ir.total_industry_payments, 0) as industry_payments,\n       COALESCE(ir.research_collaborators, 0) as research_collaborators,\n       ROUND(cc.total_procedures * 1.0 / cc.surgeon_count, 1) as procedures_per_surgeon,\n       ROUND((ce.avg_kol_score * cc.total_procedures) / 1000, 2) as expertise_volume_index\nFROM cardiac_centers cc\n    LEFT JOIN center_expertise ce ON cc.primary_hospital_name = ce.hospital_name AND cc.state = ce.state\n    LEFT JOIN industry_relationships ir ON cc.primary_hospital_name = ir.hospital_name AND cc.state = ir.state\nWHERE cc.total_procedures >= 10\nORDER BY expertise_volume_index DESC, cc.total_procedures DESC\nLIMIT 25;", "domain": "complex_procedure", "tables": ["as_providers_referrals_v2", "as_providers_v1", "mf_providers", "as_lsf_v1"], "complexity": "complex"}
{"query": "Advanced KOL network analysis: Identify influential Rheumatology opinion leaders with multi-drug prescribing patterns and research collaboration networks", "sql": "-- Complex KOL influence network with research collaboration analysis\nWITH rheumatology_kols AS (\n    SELECT mp.npi, mp.name, mp.displayName, mp.score as kol_score,\n           mp.highlyRatedConditionsCount, mp.primaryOrgName,\n           p.states[1] as state, p.cities[1] as city\n    FROM mf_providers mp\n        INNER JOIN as_providers_v1 p ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.specialties[1] LIKE '%Rheumatology%'\n        AND mp.score > 30\n),\nmulti_drug_prescribing AS (\n    SELECT CAST(f.PRESCRIBER_NPI_NBR AS Int32) as npi,\n           COUNT(DISTINCT f.NDC_PREFERRED_BRAND_NM) as drug_variety,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as total_prescriptions,\n           COUNT(DISTINCT f.PATIENT_ID) as unique_patients,\n           STRING_AGG(DISTINCT f.NDC_PREFERRED_BRAND_NM, ', ') as prescribed_drugs\n    FROM fct_pharmacy_clear_claim_allstatus_cluster_brand f\n    WHERE f.NDC_PREFERRED_BRAND_NM IN ('Humira', 'Enbrel', 'Remicade', 'Rituxan', 'Orencia', 'Actemra')\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n        AND f.SERVICE_DATE_DD >= '2022-01-01'\n    GROUP BY f.PRESCRIBER_NPI_NBR\n),\nresearch_activity AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(DISTINCT ms.mf_conditions_projectId) as research_projects,\n           AVG(ms.score) as avg_research_score,\n           MAX(ms.score) as max_research_score,\n           SUM(mc.tcSize) as total_trial_involvement,\n           COUNT(DISTINCT mc.conditionName) as research_conditions\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    GROUP BY ms.mf_providers_npi\n),\nindustry_collaboration AS (\n    SELECT CAST(l.type_1_npi AS Int32) as npi,\n           COUNT(DISTINCT l.life_science_firm_name) as collaborating_companies,\n           SUM(l.amount) as total_payments,\n           COUNT(DISTINCT l.nature_of_payment) as payment_types,\n           COUNT(DISTINCT CASE WHEN l.nature_of_payment = 'Research' THEN l.life_science_firm_name END) as research_partnerships,\n           COUNT(DISTINCT CASE WHEN l.nature_of_payment = 'Consulting' THEN l.life_science_firm_name END) as consulting_relationships\n    FROM as_lsf_v1 l\n    WHERE l.product_name IN ('Humira', 'Enbrel', 'Remicade', 'Rituxan', 'Orencia', 'Actemra')\n        AND l.year >= 2022\n    GROUP BY l.type_1_npi\n)\nSELECT rk.name, rk.displayName, rk.state, rk.city, rk.primaryOrgName,\n       rk.kol_score, rk.highlyRatedConditionsCount,\n       COALESCE(mdp.drug_variety, 0) as different_drugs_prescribed,\n       COALESCE(mdp.total_prescriptions, 0) as total_prescriptions,\n       COALESCE(mdp.unique_patients, 0) as unique_patients,\n       COALESCE(ra.research_projects, 0) as research_projects,\n       ROUND(ra.avg_research_score, 2) as avg_research_score,\n       COALESCE(ra.total_trial_involvement, 0) as trial_involvement,\n       COALESCE(ic.collaborating_companies, 0) as industry_partners,\n       COALESCE(ic.total_payments, 0) as total_industry_payments,\n       COALESCE(ic.research_partnerships, 0) as research_partnerships,\n       COALESCE(ic.consulting_relationships, 0) as consulting_relationships,\n       ROUND((rk.kol_score * mdp.total_prescriptions * ra.research_projects) / 10000, 2) as comprehensive_influence_index\nFROM rheumatology_kols rk\n    LEFT JOIN multi_drug_prescribing mdp ON rk.npi = mdp.npi\n    LEFT JOIN research_activity ra ON rk.npi = ra.npi\n    LEFT JOIN industry_collaboration ic ON rk.npi = ic.npi\nWHERE (mdp.total_prescriptions > 10 OR ra.research_projects > 0 OR ic.total_payments > 5000)\nORDER BY comprehensive_influence_index DESC, rk.kol_score DESC\nLIMIT 25;", "domain": "complex_kol", "tables": ["mf_providers", "as_providers_v1", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Multi-dimensional oncology ecosystem analysis: Correlate cancer treatment patterns, provider networks, research activity, and pharmaceutical relationships", "sql": "-- Advanced oncology ecosystem analysis with treatment pattern correlation\nWITH oncology_providers AS (\n    SELECT p.type_1_npi, p.first_name, p.last_name,\n           p.states[1] as state, p.cities[1] as city,\n           p.hospital_names[1] as hospital,\n           COALESCE(mp.score, 0) as kol_score,\n           COALESCE(mp.highlyRatedConditionsCount, 0) as expertise_areas\n    FROM as_providers_v1 p\n        LEFT JOIN mf_providers mp ON CAST(p.type_1_npi AS Int32) = mp.npi\n    WHERE p.specialties[1] LIKE '%Oncology%'\n),\ncancer_prescribing_patterns AS (\n    SELECT CAST(f.PRESCRIBER_NPI_NBR AS UInt64) as npi,\n           COUNT(DISTINCT f.NDC_PREFERRED_BRAND_NM) as oncology_drugs,\n           COUNT(DISTINCT f.RX_CLAIM_NBR) as total_prescriptions,\n           COUNT(DISTINCT f.PATIENT_ID) as cancer_patients,\n           SUM(CASE WHEN f.NDC_PREFERRED_BRAND_NM IN ('Keytruda', 'Opdivo', 'Tecentriq') THEN 1 ELSE 0 END) as immunotherapy_rx,\n           SUM(CASE WHEN f.NDC_PREFERRED_BRAND_NM IN ('Avastin', 'Herceptin', 'Rituxan') THEN 1 ELSE 0 END) as targeted_therapy_rx,\n           SUM(CASE WHEN f.NDC_PREFERRED_BRAND_NM IN ('Revlimid', 'Imbruvica', 'Gleevec') THEN 1 ELSE 0 END) as oral_oncology_rx\n    FROM fct_pharmacy_clear_claim_allstatus_cluster_brand f\n    WHERE f.NDC_PREFERRED_BRAND_NM IN (\n        'Keytruda', 'Opdivo', 'Tecentriq', 'Avastin', 'Herceptin', 'Rituxan',\n        'Revlimid', 'Imbruvica', 'Gleevec', 'Yervoy', 'Darzalex'\n    )\n        AND f.TRANSACTION_STATUS_NM = 'Paid'\n        AND f.SERVICE_DATE_DD >= '2022-01-01'\n    GROUP BY f.PRESCRIBER_NPI_NBR\n),\ncancer_procedures AS (\n    SELECT r.primary_type_1_npi as npi,\n           COUNT(*) as oncology_procedures,\n           SUM(r.patient_count) as procedure_patients,\n           AVG(r.total_claim_charge) as avg_procedure_cost,\n           COUNT(DISTINCT r.procedure_code) as procedure_variety\n    FROM as_providers_referrals_v2 r\n    WHERE r.procedure_code_description LIKE '%cancer%'\n        OR r.procedure_code_description LIKE '%oncology%'\n        OR r.procedure_code_description LIKE '%chemotherapy%'\n        OR r.procedure_code_description LIKE '%radiation%'\n    GROUP BY r.primary_type_1_npi\n),\nresearch_leadership AS (\n    SELECT ms.mf_providers_npi as npi,\n           COUNT(DISTINCT mc.projectId) as cancer_research_projects,\n           AVG(ms.score) as avg_research_impact,\n           SUM(mc.tcSize) as total_trial_patients,\n           COUNT(DISTINCT CASE WHEN mc.conditionName LIKE '%cancer%' OR mc.conditionName LIKE '%oncology%' THEN mc.projectId END) as oncology_trials\n    FROM mf_scores ms\n        INNER JOIN mf_conditions mc ON ms.mf_conditions_projectId = mc.projectId\n    WHERE mc.conditionName LIKE '%cancer%' OR mc.conditionName LIKE '%oncology%'\n    GROUP BY ms.mf_providers_npi\n),\npharma_relationships AS (\n    SELECT l.type_1_npi as npi,\n           COUNT(DISTINCT l.life_science_firm_name) as pharma_partners,\n           SUM(l.amount) as total_pharma_payments,\n           COUNT(DISTINCT CASE WHEN l.nature_of_payment = 'Research' THEN l.life_science_firm_name END) as research_sponsors,\n           COUNT(DISTINCT CASE WHEN l.nature_of_payment = 'Consulting' THEN l.life_science_firm_name END) as advisory_roles,\n           AVG(CASE WHEN l.nature_of_payment = 'Speaker Fee' THEN l.amount END) as avg_speaker_fee\n    FROM as_lsf_v1 l\n    WHERE l.product_name IN (\n        'Keytruda', 'Opdivo', 'Tecentriq', 'Avastin', 'Herceptin', 'Rituxan',\n        'Revlimid', 'Imbruvica', 'Gleevec', 'Yervoy', 'Darzalex'\n    )\n        AND l.year >= 2022\n    GROUP BY l.type_1_npi\n)\nSELECT op.first_name, op.last_name, op.state, op.city, op.hospital,\n       op.kol_score, op.expertise_areas,\n       COALESCE(cpp.oncology_drugs, 0) as different_cancer_drugs,\n       COALESCE(cpp.total_prescriptions, 0) as total_prescriptions,\n       COALESCE(cpp.cancer_patients, 0) as cancer_patients,\n       COALESCE(cpp.immunotherapy_rx, 0) as immunotherapy_prescriptions,\n       COALESCE(cpp.targeted_therapy_rx, 0) as targeted_therapy_prescriptions,\n       COALESCE(cpp.oral_oncology_rx, 0) as oral_oncology_prescriptions,\n       COALESCE(cp.oncology_procedures, 0) as oncology_procedures,\n       COALESCE(rl.cancer_research_projects, 0) as research_projects,\n       ROUND(rl.avg_research_impact, 2) as research_impact_score,\n       COALESCE(rl.total_trial_patients, 0) as trial_patients,\n       COALESCE(pr.pharma_partners, 0) as pharma_partners,\n       COALESCE(pr.total_pharma_payments, 0) as pharma_payments,\n       COALESCE(pr.research_sponsors, 0) as research_sponsors,\n       ROUND(\n           (op.kol_score * 0.3) + \n           (cpp.total_prescriptions * 0.2) + \n           (rl.cancer_research_projects * 0.3) + \n           (pr.pharma_partners * 0.2), 2\n       ) as comprehensive_oncology_influence_score\nFROM oncology_providers op\n    LEFT JOIN cancer_prescribing_patterns cpp ON op.type_1_npi = cpp.npi\n    LEFT JOIN cancer_procedures cp ON CAST(op.type_1_npi AS Int32) = cp.npi\n    LEFT JOIN research_leadership rl ON CAST(op.type_1_npi AS Int32) = rl.npi\n    LEFT JOIN pharma_relationships pr ON op.type_1_npi = pr.npi\nWHERE (cpp.total_prescriptions > 5 OR rl.cancer_research_projects > 0 OR pr.total_pharma_payments > 10000 OR op.kol_score > 35)\nORDER BY comprehensive_oncology_influence_score DESC\nLIMIT 30;", "domain": "complex_market", "tables": ["as_providers_v1", "mf_providers", "fct_pharmacy_clear_claim_allstatus_cluster_brand", "as_providers_referrals_v2", "mf_scores", "mf_conditions", "as_lsf_v1"], "complexity": "complex"}
{"query": "Find all prescriptions for Gleevec", "sql": "-- Simple drug prescription lookup\nSELECT RX_CLAIM_NBR, PATIENT_ID, SERVICE_DATE_DD, DISPENSED_QUANTITY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Gleevec'\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY SERVICE_DATE_DD DESC\nLIMIT 50;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Show prescriptions in MI from 2021", "sql": "-- Prescriptions by state and year\nSELECT NDC_PREFERRED_BRAND_NM, COUNT(*) as prescription_count\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE PRESCRIBER_NPI_STATE_CD = 'MI'\n    AND YEAR(SERVICE_DATE_DD) = 2021\n    AND TRANSACTION_STATUS_NM = 'Paid'\nGROUP BY NDC_PREFERRED_BRAND_NM\nORDER BY prescription_count DESC\nLIMIT 20;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "List Tecentriq prescriptions with high quantities", "sql": "-- High quantity prescriptions for Tecentriq\nSELECT RX_CLAIM_NBR, PATIENT_ID, DISPENSED_QUANTITY_VAL, DAYS_SUPPLY_VAL\nFROM fct_pharmacy_clear_claim_allstatus_cluster_brand\nWHERE NDC_PREFERRED_BRAND_NM = 'Tecentriq'\n    AND DISPENSED_QUANTITY_VAL > 90\n    AND TRANSACTION_STATUS_NM = 'Paid'\nORDER BY DISPENSED_QUANTITY_VAL DESC\nLIMIT 25;", "domain": "simple_prescription", "tables": ["fct_pharmacy_clear_claim_allstatus_cluster_brand"], "complexity": "simple"}
{"query": "Find all Family Medicine providers in TX", "sql": "-- Simple provider lookup by specialty and state\nSELECT first_name, last_name, cities[1] as city, phone\nFROM as_providers_v1\nWHERE specialties[1] LIKE '%Family Medicine%'\n    AND states[1] = 'TX'\nORDER BY last_name, first_name\nLIMIT 30;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Show providers in Houston, TX", "sql": "-- Providers by city\nSELECT first_name, last_name, specialties[1] as specialty, hospital_names[1] as hospital\nFROM as_providers_v1  \nWHERE cities[1] = 'Houston'\n    AND states[1] = 'TX'\nORDER BY specialties[1], last_name\nLIMIT 25;", "domain": "simple_provider", "tables": ["as_providers_v1"], "complexity": "simple"}
{"query": "Find payments above $20000 for Avastin", "sql": "-- High-value payments for specific product\nSELECT type_1_npi, life_science_firm_name, amount, nature_of_payment, year\nFROM as_lsf_v1\nWHERE product_name LIKE '%Avastin%'\n    AND amount > 20000\nORDER BY amount DESC, year DESC\nLIMIT 20;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "List all Grant payments in 2024", "sql": "-- Payments by type and year\nSELECT life_science_firm_name, product_name, COUNT(*) as payment_count, SUM(amount) as total_amount\nFROM as_lsf_v1\nWHERE nature_of_payment = 'Grant'\n    AND year = 2024\nGROUP BY life_science_firm_name, product_name\nORDER BY total_amount DESC\nLIMIT 25;", "domain": "simple_payment", "tables": ["as_lsf_v1"], "complexity": "simple"}
{"query": "Show mammography procedures in 2023", "sql": "-- Simple procedure lookup by type and year\nSELECT primary_type_1_npi_name, primary_hospital_name, procedure_code, total_claim_charge, patient_count\nFROM as_providers_referrals_v2\nWHERE procedure_code_description LIKE '%mammography%'\n    AND YEAR(date) = 2023\nORDER BY total_claim_charge DESC\nLIMIT 30;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
{"query": "Find procedures in NY above $150000", "sql": "-- High-value procedures by state\nSELECT procedure_code_description, primary_specialty, total_claim_charge, patient_count, date\nFROM as_providers_referrals_v2\nWHERE primary_type_2_npi_state = 'NY'\n    AND total_claim_charge > 150000\nORDER BY total_claim_charge DESC, date DESC\nLIMIT 25;", "domain": "simple_procedure", "tables": ["as_providers_referrals_v2"], "complexity": "simple"}
